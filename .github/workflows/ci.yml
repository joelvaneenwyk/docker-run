name: CI
on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '.github/workflows/release-drafter.yml'
      - '.github/release-drafter.yml'
      - 'README.md'
  release:
    types:
      - created

env:
  NODE_VERSION: 20.x
  NODE_CACHE_PATH: '~/.cache/pnpm/'
  NODE_HASH_FILES: '**/pnpm-lock.yaml'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm install -g corepack
      - run: corepack enable

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles(env.NODE_HASH_FILES) }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install

      - name: Run lint
        run: pnpm run lint

  test_v1:
    name: Test Using Dockerrc File
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm install -g corepack
      - run: corepack enable

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles(env.NODE_HASH_FILES) }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install

      - name: Run Tests For .dockerrc(v1)
        run: xvfb-run -a pnpm run test:v1

  test:
    name: Test Using VS Code Settings
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm install -g corepack
      - run: corepack enable

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles(env.NODE_HASH_FILES) }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install

      - name: Run Tests
        run: xvfb-run -a pnpm test

  publish:
    needs: [test_v1, test]
    name: Publish
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - run: npm install -g corepack
      - run: corepack enable

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles(env.NODE_HASH_FILES) }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install

      - name: Publish
        run: pnpm run deploy
        env:
          VSCE_PAT: ${{ secrets.VSCE_TOKEN }}
